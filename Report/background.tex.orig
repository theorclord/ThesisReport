\section{Background}
<<<<<<< HEAD
Short introduction to the background section

first basic definitions - tabletop games -board games, collaborative and coop.


=======
This section will present the existing background of this paper. Existing game genres and their properties as well 
>>>>>>> 12b6e220019c0e8f3367038cf5347e8e41477a88
Relevant examples from existing games will then be analysed to complete the framework and illustrate the concepts explored in this paper.
\subsection{Basic definitions}
It is commonly admitted that there are as many definitions of games as there are players. People working in the game industry, researchers, and players still disagree on which key elements should a taxonomy of games be based on. The french sociologist Roger Caillois (1958, p.3) explains the difficulty of establishing an all-inclusive game classification:
\begin{quotation}
The multitude and infinite variety of games at first causes one to despair of discovering a principle of classification capable of subsuming them under a small number of well-defined categories. Games also possess so many different characteristics that many approaches are possible.
\end{quotation} 
With this statement, one could argue that defining or classifying game genres is not relevant, as there will always be examples that do not fit the definition, which will then need to be extended and will therefore move away from its original meaning. This paper will certainly not bring a clear and universal definition of the game genres relevant to its topic, as definitions and taxonomies are necessarily affected by their research purpose. Nonetheless, basic definitions are needed to construct an understandable framework and provide tools that will help analysing the impact of the use of PCG in tabletop games, both on their design and creation and on the experience they enable.
<<<<<<< HEAD
Obviously, the implementation of digital components into tabletop games can already cause problems to some people, depending on their understanding of what tabletop games are. The following paragraphs will narrow down the definitions, in order to point out the key elements that will be referred to in the analysis of the contribution of PCG in Archipelago. 
=======
Obviously, the implementation of digital components into tabletop games can already cause problems to some people, depending on their understanding of what tabletop games are. The following paragraphs will narrow down the definitions, in order to point out the key elements that will be referred to in the analysis of the contribution of PCG in Archipelago.
>>>>>>> 12b6e220019c0e8f3367038cf5347e8e41477a88
\subsubsection{Tabletop Games}
The definition of \textit{tabletop games} is the first one that must be refined in order to correctly comprehend the purpose of this paper. An example is needed as a reference in order to point out their key aspects. Nat Levan, designer at Oakleaf Games gives his own definition of tabletop games (Levan 2014).
\begin{quotation}
The defining feature of a tabletop game is the need for components, not the need for a table. [...] [S]o perhaps saying that a tabletop game is a game with a structured placement of components establishes a better requirement.
\end{quotation} 
\textit{Tabletop games} is a generic term used to refer to a broad variety of game genres that are played on a table or the like. They range from card games, board games, not forgetting miniature games or dice games. The aim of defining \textit{tabletop games} like this is also a way to exclude digital games from the frame. 
Although removing the need for a table from the definition seems rather counter-intuitive, designers make this assumption to include other simple games using components. Nat Levan uses the example of the game of "guess what I'm holding in my hand"(Levan 2014) in order to justify his statement. 
However, it seems that this approach is rather incomplete, as it overshadows the social aspect of tabletop games. It is understandable that tabletop games are not necessarily meant to gather people around a table to play. As an example, platforms allowing traditional tabletop games like \textit{Carcassone} (Wrede 2000), \textit{Through the Ages: A Story of Civilization} (Chv√°til 2006) or \textit{Race for the Galaxy} (Lehmann 2007) and others to be played online have made their appearance with the development of the internet. 
These games do not cease to be \textit{tabletop games}, even though the play experience is made different by changing the context in which they are played. Tabletop games need a space (real or virtual) where the players can gather and participate to the play experience. In his work retracing the history of eurogames
\footnote{A particular (although not clearly defined) type of tabletop game culture that has originated in Europe.}
, Stewart Woods (2012, p.212) explains why the social aspect of tabletop games is a defining element:
\begin{quotation}
The play of tabletop games is a complex social activity.[...] [M]anagement of the immediate social setting in tabletop games adds a meta-level of understanding that cannot help but inform the process of play. The social context of the game can indeed shape play in a variety of ways, since players are always mindful of the social environment in which a game encounter takes place.
\end{quotation}
In consequence, the nature of tabletop games is what shapes the very particular play experience that they enable. Playing tabletop games means finding the right balance between being competitive, and socially \emph{acceptable}. Designing tabletop games also means supporting this shared experience and taking it into account. As long as they are made to be played by several players, tabletop games and their social dimension are inseparable. In the particular case of tabletop games meant to be played by only one player, this quality of tabletop games can be put aside.

To complete the reflection, the next step of the process is to define what can be called "components", and why they have to be central in the case of tabletop games. Core components of tabletop games are generally thought as physical. They can be cards, tokens, pawns, dice or any object used as a core element in the game, which can therefore not be played without them. As is well known, tabletop games have generally evolved staying away from digital components. Exceptions exist though, and game makers have already experimented the use of technology to influence their design. The game \textit{Atmosfear} (Clements 1991) included a VHS tape showing "The Gatekeeper", who attributes rewards to the players, punishes them or gives them instructions at specific moments in the game, thus also acting as a timer. In that sense the VHS can be seen as a component in itself, like a deck of cards with a hourglass.
Components can then be defined as interactive elements without which the game cannot be played. The central dimension of components is clearly understandable, but it is important to notice that their physical property has been excluded from the definition.

After this clarification, it is now possible to come up with a definition of what tabletop games are. Tabletop games cannot be narrowed to the simple use of physical components, neither must they absolutely be played on a table; a more appropriate definition could be that tabletop games are games requiring the players to use central components in a space - real or virtual - representing a table or similar surface, around which player(s) gather and participate to the play experience.
\subsubsection{Board Games}
\textit{Board games} are generally considered as a subcategory of tabletop games. Therefore, it can be considered that the properties of board games derive from those of tabletop games. Oxford Dictionaries (2016) provide the following definition:
\begin{quotation}
"A game that involves the movement of counters or other objects round a board."
\end{quotation}
While this is a rather broad definition, it can still be used to present key aspects of board games. The terms "Counters or other objects" refer to the core components that were previously mentioned as a key aspect of tabletop games. The new element here entering the definition being the game board, which is the surface on which the players move pieces, place cards or tiles in order to achieve the goal of the game. As it has been explained beforehand, this surface is not necessarily physical and can be then represented on a digital device like a screen. In a board game, the board is of course a key component. It is the center of the attention of players, and can serve several purposes.

The game board concentrates all the structural elements that the players should focus on in order to correctly play the game. It must support the play experience and also put limitations on the way the game is played. It that sense, it is as much an interface from which players extract the - more or less abstract - information they need, as it is an \textit{obstacle} forcing them to play according to the rules. In the game of \textit{Chess} for example, where planning and anticipation are the building blocks of the experience, those properties are clearly identifiable - though the board is not the most furnished one. It limits the movement of the pieces within a square of 8 units of length, and a trained eye can easily identify valuable information (i.e. the movement possibilities), thanks to the tiled structure of the checker. One last property that can be identified, is that a board is rarely a core component in itself. During a game, the board only makes sense when it is accompanied by other core components like tokens or cards. Following the example of \textit{Chess} again, the checker alone does not provide the necessary information in order to properly plan a strategy. It is only when the pieces are on the board that an experienced player can almost literally see the possible moves and anticipate the danger. This is only one example: game boards have different structures and purposes, and listing their properties here would not be relevant. But from those identified earlier, it becomes possible to give a definition of games using boards: \textit{board games} are tabletop games using a game board and its properties as a core component.
\subsubsection{Collaborative and cooperative game play}
Competition is a core element of games - and play in general. Salen and Zimmerman (2003, p 20) explain the conflictual dimension of games as follows:
\begin{quotation}
Our opinion is that all games are competitive. All games involve a conflict, whether that conflict occurs directly between players or whether players work together against the challenging activity presented by the game system.
\end{quotation}
This statement shows that competition must not be opposed to cooperation. Only the target of that competition changes. Yet, Salen and Zimmerman do not make a distinction here between \textit{cooperating} and \textit{collaborating}. Though their respective approaches on the play experience can be thought similar, some researchers make the difference between cooperative and collaborative games. Nash (2002, cited in Zagal et al., 2006, p.25) argues that in cooperative games, the players have interests that are "neither completely opposed, nor completely coincident". In contrast,"in a collaborative game, all the participants work together as a team, sharing the pay-offs and outcomes; if a player wins or loses, everyone wins or loses"(Zagal \& Rick, 2006, p.25). This differentiation between \textit{cooperation} and \textit{collaboration} makes a big difference in the play experience. As an example, \textit{Diplomacy} (Calhamer 1959) encourages players to create alliances between them, and betray them when it is needed. On the other hand, in \textit{Forbidden desert} (Leacock 2013), players have to manage the resources they individually possess and put their skills at the service of a team. 
This contrast is noticeable thanks to the interactions between the players. Collaboration involves more open discussions among the players and exclude the necessity to voluntarily hide information.

\subsection{Defining Hybrid Board Games}
\textit{Hybrid games} is an expression that has many different definitions, and the genre is largely unexplored yet. Therefore, there is not a universal understanding of what hybrid games are. Some people simply call \textit{hybrid games} games that are a combination, or hybridization, of two or more different genres of games. The interest of that definition is that it removes the analogue or digital aspect of games and simply focuses on the experience they provide. It needs to be refined though, because many games can be seen as a combination of genres, as game designers often build upon already existing game mechanics, trying to adapt them in another context. 

In this paper, \textit{hybrid board games} will be referred as board games (and all their properties previously defined) using one or several digital components. One criteria needs to be added though: as it has been already mentioned, the digital or analogue nature of the components does not change what defines tabletop or board games. Consequently, hybrid games must have another property. A game is much more than its components, game play mechanics or even its rules. Therefore, only board games including digital components in order to enable an experience that cannot exist without using the computing power of digital devices will be considered as \textit{hybrid board games} in this paper. Games that only use digital devices to simulate analogue game components (deck of cards or board for example) without providing any new feature are not considered hybrid games in this paper. Several games fitting this definition have already been created. The three examples presented later show the potential of this approach of hybrid games, each in its own way.

\subsubsection{Hybrid Experiments: False Prophets and STARS}
People have also started to refer to \textit{hybrid games} as games that try to close the gap between analogue and digital games. False Prophets is an experimental game that explores "the space between board games and video games, leveraging (sic)the advantages of both"(Mandryk \& Maranan 2000). This experiment focussed more on the technical challenge rather than the game design aspect. Mandryk and Maranan created a tabletop display using sensors in order to recreate an interface. 
A map is projected on a surface containing infra-red sensors, which can detect the position of the tokens in the displayed tiles. Originally, the map is hidden. It is only when the game's computer detects players approaching its borders that the map expands. The interest of this experiment is that it tries to exploit the assets of both game boards and computers. It exploit the setting of having an interface around which players can gather, and computation can be used to do complex calculation that would be very complex to do for humans. In this case, the manifestation of that is the map that gets revealed dynamically. While fully analogue games that possess this feature, like \textit{Zombies!!!}(T. Breitenstein \& K. Breitenstein 2001) already exist, the sensor interface could allow many possibilities for game mechanics. The creators of False Prophets mentioned having "playing pieces that store data, interpret contextual information, and travel continually with the players"(Mandrik \& Maranan 2000).

STARS (Magerkurth, Stenzel \& Prante 2003) is another example of the integration of digital devices in the traditional way of playing tabletop games. However, this project is an attempt to create an "augmented tabletop game platform" (Magerkurth, Stenzel \& Prante 2003) which could be usable with multiple games. The platform features an interactive touch-sensitive screen, which displays the content of the game board as well as it manages the interactive playing pieces. A camera is situated over the table and tracks the position of other playing pieces. STARS also features a wall display and other digital components like a small Personal Digital Assistant (used by the players to secretly communicate and store personal information related to the game), and audio devices. The experiment is an attempt to exploit a ubiquitous computing environment (an environment exploiting multiple devices) to allow the creation of more complex game rules, and recreate a game world with more fidelity without slowing down the game flow with multiple complex calculation. It also allows multiple game sessions, as well as game persistence. Although this experiment looks similar to False Prophets, its interest is that it exploits multiple devices and their characteristics in order to create a platform which can then be used for multiple games. It opens to the possibility of creating other tabletop games using digital devices as core components and enable new experiences. One could argue that the quantity of available information (on the board, the wall display and the personal digital assistant) might get in the way of play by making it too complex. But this invention is interesting in its approach of hybrid board games: it uses the potential of digital devices as core components, enabling new play experiences that would hardly be possible otherwise.
\subsubsection{Playing a Hybrid Game - \textit{XCOM: The Board Game}}
For the majority of players, X-COM (sometimes written "XCOM") is a series of video games which first episode was \textit{UFO: Enemy Unknown} (Microprose 1994)\footnote{Also known as \textit{X-COM: UFO Defense} in its north-American version.}. The series has many episodes and spin-off, and also a tabletop game plainly called \textit{XCOM: The Board Game} (Eric M. Lang 2015). What makes this game interesting for the purpose of this paper is its use of a digital component: an application which has to be downloaded on a digital device (smartphone, tablet or computer) or opened in a web browser. The game simply cannot be played without this application, since the app displays instructions that the players have to follow. On a certain extent, it cannot even be learnt without it: in the box, only a very short leaflet explains how to set up the game and where to find the application. The rules book is not included in the package - which can be disturbing for some players. Instead, all the rules are explained during the - optional - tutorial phase explaining the flow of the game, step by step. This particularity will be the final focus point of this play-through analysis.

The game is described as a one to four players cooperative game. However, since the players share the same interest and goal, the game actually falls the definition of collaborative games that has been previously explained in this paper. Therefore, this is how the game is going to be referred as from now on.
In \textit{XCOM: The Board Game}, the players are part of the X-COM, a paramilitary organization that defends the Earth against an alien invasion, after all the regular armies have failed to do so. The game's board is a representation of a world map, with other boxes used for the different game mechanics.
Fist of all, there are several levels of difficulty available. It must be selected prior to starting the game. The level of difficulty affects in various ways the instructions given by the app integrated in the game.

One round is divided in two phases: the Timed Phase and the Resolution Phase. The companion app tells the players the order of the different tasks that constitute one phase as well as how much time is available to finish it - knowing that the order of the tasks changes over the rounds. The tasks are a preparation for the resolution phase: the players discuss to allocate resources in the best possible way, assign soldiers to defend the XCOM base, or prepare to repel the next alien attack. The players also have missions to solve, which are a good way to get more resources. There is also a final mission that the players have to complete in order to finish the game. As its name suggests, the players have limited time to perform the tasks during the Timed Phase, but there is a Pause button in case the players need more time to think about the best way to perform the tasks. In the normal and higher difficulty modes, the time during which the game can be paused is limited but is renewed at the beginning of each round.

During the Resolution Phase, the players solve the tasks they have prepared during the Timed Phase. This often takes the form of dice rolls. The tasks to solve are different depending on the player's role. At the end of the Resolution Phase, the player responsible for managing the digital device is asked to enter a few information about the round (i.e. what is the current panic level of panic for each continent and if a mission as been successful or not). These inputs are necessary for the app to generate the locations where the aliens will spawn during the next turn. Four \textit{roles} must be split between the players (players can have more than one role in case of a game with less than four players):
\begin{itemize}
\item The Central Officer is the only player that has to use the digital device, she has to relay the instructions that are displayed on the app to the other players. Also, the Central Officer is responsible for placing the alien tokens at the right on the game's board when instructed by the app. She can also decide when to use the pause button to give more time to her team.
\item The Chief Scientist researches alien technologies when instructed by the Central Officer (relaying the app's instructions), which are bonuses that help the other players (or the Chief Scientist herself) performing their tasks.
\item The Squad Leader controls the ground soldiers. This is done to defend the base when it is attacked, and when trying to solve one of the missions. The dead aliens are used as a resource by the Chief Scientist to develop new technologies.
\item Performing tasks cost money. The Commander is the player responsible for the budget, and thus manages an overall strategy. She also deals with the UFO that are spawned all over the world. If one of the continent is not defended correctly, its panic level increases, and it becomes even harder to defend. When two continents have reached the maximum panic level, the game is lost.
\end{itemize}
\textit{XCOM: The Board Game} definitely shows how the use of a digital device can enable interesting playful experiences. The fact that the Timed Phase is indeed limited in time is not an absolutely new feature in itself. But once the available time to perform a task is up, the next task starts directly and the players have to abandon what they were doing and move on in order to keep up with the app. Because of this, playing as the Chief Officer nicely recreates a feeling of being the one without whom the team would be overwhelmed by the flow of the game. The instructions coming from that player have then to be clear, and quick. The combination of the time limit with the random order in which the tasks have to be performed creates a feeling of constant emergency during the Timed Phase. Succeeding in performing all the tasks in due time, feels relieving and rewarding, as the team coordination is working correctly. Players learn how to rest on their team members while doing their best not to fail. This model of team dynamic would hardly be possible to recreate without the use of the digital device, because of the number of game pieces that would be required to simulate it. Here, the device simply uses a combination of some of its basic functions, and some player inputs. The simplicity enables an experience that would be impossible without a digital component. Therefore, the game deserves its status of \textit{Hybrid Game}.

Aside from what it brings to the play experience, the way the app is used to teach the game is also interesting. Traditional rulebooks usually follow a step-by-step process as well. But the app encourages the players to perform all the actions one by one, while the explanations are displayed. This make the rule learning phase very similar to strategy video game tutorials, where the players are encouraged to use a unit to learn its potential. This combined with the collaborative game play, where smaller tasks are divided between players makes it very easy to learn how the game works. It is not surprising that the game can then be won without even knowing exactly what the other players had to do.
The device is normally not too intrusive in the game, as reading the instructions fast and clearly is part of the experience. The only aspect that interferes with the experience being the moment when the player holding the device has to enter some inputs, so that the app \textit{knows} what happened during the turn. Although, because it is an uncommon component to use in a tabletop game, not having to do anything with the device itself can feel a bit frustrating for some players. A last detail is also worth noticing when analysing a hybrid game like this: the game flow can be completely annihilated if the device runs out of battery - which can be very frustrating when playing a tabletop game. 

\subsection{Procedural Content Generation}
\begin{quotation}
"Procedural content generation (PCG) refers to the algorithmic creation of content. It allows content to be generated automatically, and can therefore greatly reduce the increasing workload of artists." (Rolan van der Linden, et al., Procedural generation of dungeons, March 2014).
\end{quotation}
This quote tells us that PCG does not really have anything to do with the playing of the game it self, rather the contents within it, hence the name procedural \textit{content} generation. It is becoming more accepted within larger companies, as a way to lighten workload of other artists, and its uses range between various fields.
To build on what R. van der Linden, et al. say in their paper, about reducing workloads, PCG is a great tool to create templates for content, based on data from designer, artists, etc. PCG can also be used as a tool for aiding in creating content. This approach is called Computer Assisted Design\cite{book:cad}. 
The general idea behind this is that a tool generates some content or usable structure, which it then exposes to a designer. The designer can tweak parameters and sometimes directly interact with the generated content. This way a designer might be presented with a basic structure of a tree, and then have the ability to add branches and leaves, which are in turn generated by the tool. 
The work of the artist is aided by the computer, giving the artist more time to work out the details. Computer generates templates and a base, then it is up to the artist to look over the content and see whether it is pleasing enough, fun enough, and/or acceptable in the final form. The final idea behind this is that it is in the minds of humans that creativity lies. 


Other aspects within the PCG world, which is becoming more and more accepted and used, is "Experience Driven" PCG[reference]. This concept is taking into account the previous events and data gathered within the game or application. By using gathered data, the newly generated contents can be altered to better fit with the way the previous content was used. Say you have a map in a first person shooter (FPS), and the initial map was generated statically by PCG, and not by E.D.PCG. The first map could be a very good one, by all means, but the program has no way of actually knowing how it will be used. Then by gathering data from an actual live run of the program, the PCG algorithm can then be altered to take into account frequent patterns that may occur, what open areas are most used, places with high chance of death, etc. Basically by combining some form of data mining with PCG and have a clever way of integrating them based on experience, you get a smarter way of generating content, and the content will have more "meaning" as it is in fact based on real life events and occurrences.

\subsubsection{Genetic Algorithms}
PCG is a very broad term, and it is becoming even broader. In the field of computer science, combining different areas into one program is not uncommon. This goes for PCG as well. As described above, PCG can be combined with data mining in order to create experience driven PCG. But there are many more things you can do, for instance, taking use of artificial intelligence. Specifically genetic algorithms. A genetic algorithm has the main function of taking a given part, called a Genome, and mutating parts of if, the chromosomes, and returning the changed values. However in order to select which mutated genome should be used, a fitness function is needed. What these functions do, is to test the generated genomes against parts of the program that is applicable. By scoring the genomes performance on the parts tested up against, you are able to select the highest scoring one. The best one. 

Sometimes, however, the highest scoring genome is not necessarily the best one. Sometimes combining a lower scoring genome with a higher scoring one can diversify the results, and the outcomes can be completely different, educational, and sometimes even better than before. Having this in mind when using this algorithm, and also when generally just combining different methods together, can be a smart move. Sometimes having a novelty search will grant the results that would not have been possible if only using a best-fit selection.

\subsubsection{L-Systems}
A Lindenmayer system, or L-system in short, is a PCG algorithm that is based on grammars and rules. In the start, you have an axiom, which is the initial value that the system will expand upon, along with rules/grammar that explains what within the axiom needs to be changed over each iteration. The algorithm also needs a number for how many times the axiom will be changed; the iteration number. What this algorithm does, if you for example are going to be using a string and expand upon that, is to go through each element i.e. the characters, that's found within the string, check for matching rules to each given character, and then apply the result of said rule to the result string.

\subsubsection{Procedural Content Generation in Game Design}
PCG being a programming concept allowing the rapid creation of content, it has been mostly used for video games. There are counter examples to that statement though. In films for example, PCG can be used to rapidly generate complex scenes. The battle scenes \textit{The Lord Of The Rings: The Two Towers} (2002) and its sequel \textit{The Lord Of The Rings: The Return of the King} (2003) for example have been made possible thanks to an agent generator software called \textit{Massive} (2001, Weta Digital), which procedurally generates intelligent and independent agents in order to simulate large-size battles. This paper will leave that case aside though and focus in the next paragraphs on PCG-based games in order to point out the Game Design concepts that are enhanced thanks to the use of PCG. The basic concepts have been identified by researchers (2011 Smith et al.).

The most obvious aspects reinforced by PCG that are pointed out in this article are replayability and adaptability, which are considered interconnected.

Replayability is a concept used to describe the fact that a player can still discover new aspects of a game even after finishing it the first time. The paper refers to the game \textit{Rogue}(Toy, Wichman and Arnold, 1980), as one of the earliest and most famous example of PCG-based games. The basic concept of \textit{Rogue} is simple and has given birth to a new game genre - also giving it its name: Rogue-like games. The principle of Rogue-like games is the following: the player explores his environment (a dungeon in the case of \textit{Rogue}), collects items (like equipment) to become stronger and defeat more and more dangerous enemies. In Rogue-like games, the environment (and thus the collectible items and the enemies) are procedurally generated which ensures that the players are really unlikely to face the same situation when going through the game. This shows how PCG can enhance the replayability of a game.

In the same study, adaptability is referred as "the use of procedural content generation to adjust content in reaction to player actions or skill levels". An example can be found in the video game \textit{FTL: Faster Than Light} (Subset Games, 2011). This game - which uses Rogue-like game mechanics - is based on procedurally generated events that players   have to overcome, sometimes by choosing between two different solutions. The selected option will then influence the next events generated by the game. In that case, the player's actions are the parameters used by the algorithm to generate the content. In other words the game content adapts itself to the player's action.

A distinction is also made between "PCG systems augment traditional mechanics and those which enable new mechanics entirely" (2011, Smith et al.). That distinction is made to differentiate the impact of PCG on the game's mechanics and the effect on the play experience. The example of \textit{Borderlands} (Gearbox Software 2009) is given in the paper to demonstrate that PCG does not change the core mechanics of the game itself - a first-person shooter game in which the players collect more and more powerful procedurally generated weapons. However, the play experience is vastly affected by the perceived randomness that PCG can enable. The excitement when waiting for the containers holding weapons, or the sudden burst of adrenaline when a powerful weapon appears could not be reproduced without the use of PCG. The Game Designers seem to have also enhanced that aspect in the multi-player mode by making the generated items collectible by any player, even players that have never taken part in the battle (this mechanic is generally called "ninja-loot"). Another example that comes to mind is the game \textit{Diablo} (Blizzard North 1996). It uses the same approach to procedurally generate equipment, but the emphasis is put on the optimization of the character's attributes and skills. This use of PCG is opposed to game mechanics based on PCG: \textit{Galactic Arms Race} (Evolutionary games 2014) uses a mechanic in which the more a weapon is used, the more the chances of getting a weapon having similar properties increase. This mechanic is used to base the gameplay on the player's choices, as it becomes important to use the weapons with the preferred attributes, in order to get similar weapons later in the game. In that sense, the mechanic can be considered PCG-based.

PCG being a programming concept allowing the rapid creation of content, it has been mostly used for video games. There are counter examples to that statement though. In films for example, PCG can be used to rapidly generate complex scenes. The battle scenes \textit{The Lord Of The Rings: The Two Towers} (2002) and its sequel \textit{The Lord Of The Rings: The Return of the King} (2003) for example have been made possible thanks to an agent generator software called \textit{Massive} (Weta Digital 2001), which procedurally generates intelligent and independent agents in order to simulate large-size battles. This paper will leave that case aside though and focus in the next paragraphs on PCG-based games in order to point out the Game Design concepts that are enhanced thanks to the use of PCG. The basic concepts have been identified by researchers (Smith et al. 2011)\\
Replayability is a concept used to describe the fact that a player can still discover new aspects of a game even after finishing it the first time. The paper refers to the game \textit{Rogue} (Toy, Wichman \& Arnold 1980), as one of the earliest and most famous example of PCG-based games. The basic concept of \textit{Rogue} is simple and has given birth to a new game genre - also giving it its name: Rogue-like games. The principle of Rogue-like games is the following: the player explores his environment (a dungeon in the case of \textit{Rogue}), collects items (like equipment) to become stronger and defeat more and more dangerous enemies. In Rogue-like games, the environment (and thus the collectible items and the enemies) are procedurally generated which ensures that the players are really unlikely to face the same situation when going through the game. This shows how PCG can enhance the replayability of a game.\\ 
In the same study, adaptability is referred as "the use of procedural content generation to adjust content in reaction to player actions or skill levels" (Smith et al. 2011). An example can be found in the video game \textit{FTL: Faster Than Light} (Subset Games 2011). This game - which uses Rogue-like game mechanics - is based on procedurally generated events that players   have to overcome, sometimes by choosing between two different solutions. The selected option will then influence the next events generated by the game. In that case, the player's actions are the parameters used by the algorithm to generate the content. In other words the game content adapts itself to the player's action.\\
A distinction is also made between "PCG systems augment traditional mechanics and those which enable new mechanics entirely" (Smith et al. 2011). That distinction is made to differentiate the impact of PCG on the game's mechanics and the effect on the play experience. The example of \textit{Borderlands} (2K Games 2009) is given in the paper to demonstrate that PCG does not change the core mechanics of the game itself - a first-person shooter game in which the players collect more and more powerful procedurally generated weapons. However, the play experience is vastly affected by the perceived randomness that PCG can enable. The excitement when waiting for the containers holding weapons, or the sudden burst of adrenaline when a powerful weapon appears could not be reproduced without the use of PCG. The Game Designers seem to have also enhanced that aspect in the multi-player mode by making the generated items collectible by any player, even players that have never taken part in the battle (this mechanic is generally called "ninja-loot"). Another example that comes to mind is the game \textit{Diablo} (Blizzard Entertainment 1996). It uses the same approach to procedurally generate equipment, but the emphasis is put on the optimization of the character's attributes and skills. This use of PCG is opposed to game mechanics based on PCG: \textit{Galactic Arms Race} (Evolutionary games 2014) uses a mechanic in which the more a weapon is used, the more the chances of getting a weapon having similar properties increase. This mechanic is used to base the gameplay on the player's choices, as it becomes important to use the weapons with the preferred attributes, in order to get similar weapons later in the game. In that sense, the mechanic can be considered PCG-based.\\
Finally, this mechanic also illustrates the last aspect of PCG-based Game Design described in the article, which is the player's control over the game's content. This means that the player has an influence over the PCG system in the game. In theory, the players input are often used by the algorithm to use the new content, so the influence of the player is real. However, in order to have a certain control over the game's content, a player must be aware that she influences the algorithm with her choices. This is what is called "direct control" (Smith et al. 2011). It is opposed to indirect control, when a player's actions are taken into account when the games generating the content without her knowing in what extent the actions have influenced the content generation. This is the model which is used in the majority of PCG-based games. This shows an interesting aspect of using PCG for designing games: PCG can help creating a feeling of surprise (by simulating randomness) as well as it can be used to show the player that her actions influenced the game in some way, thus creating a feeling of responsibility and sometimes even guilt.  

